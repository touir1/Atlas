@model IEnumerable<Atlas_frontend.Models.AbsenceModel>
@using Microsoft.AspNetCore.Http
@using Atlas_frontend.Services
@using Atlas_frontend.Models.Enums
@inject ICompteService CompteService
@inject IHttpContextAccessor HttpContextAccessor
@inject IAbsenceService AbsenceService

@{
    ViewData["Title"] = "Absence list";
    List<AbsenceModel> myAbsences = ViewBag.myAbsences ?? new List<AbsenceModel>();
    List<AbsenceModel> toValidateAbsencesManager = ViewBag.toValidateAbsencesManager ?? new List<AbsenceModel>();
    List<AbsenceModel> toValidateAbsenceHR = ViewBag.toValidateAbsencesHR ?? new List<AbsenceModel>();

    bool isManager = CompteService.HasRole(HttpContextAccessor.HttpContext.Session, RankEnum.Manager);
    bool isHR = CompteService.HasRole(HttpContextAccessor.HttpContext.Session, RankEnum.HR);
}

<h1>Absences</h1>
Solde de congé: @ViewBag.soldeCongee jour(s)
<br />
<p>
    <a asp-action="Create" class="btn btn-sm btn-outline-success" style="margin-top:10px;">Demande d'absence</a>
</p>
<hr />
<h4>Mes congés</h4>
<table class="table table-striped table-hover">
    <thead class="thead-dark">
        <tr>
            <th>
                #
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateDebutConge)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateFinConge)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Heures)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in myAbsences)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateDebutConge)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateFinConge)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Heures)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @if (item.Status == AbsenceStatus.AValider)
                    {
                        @: @Html.ActionLink("Modifier", "Edit", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-sm btn-outline-warning " }) |
                        @: @Html.ActionLink("Supprimer", "Delete", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-sm btn-outline-danger" })
                    }


                </td>
            </tr>
        }
    </tbody>
</table>

@if (isManager)
{
    <br />
    <h4>Congés à valider</h4>
    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>
                    #
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateDebutConge)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateFinConge)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Heures)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Type)
                </th>
                <th>
                    Solde congé
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in toValidateAbsencesManager)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateDebutConge)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateFinConge)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Heures)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @await AbsenceService.GetSoldeCongeeTotale(HttpContextAccessor.HttpContext.Session,item.User.Id.GetValueOrDefault(0))
                    </td>
                    <td>
                        @Html.ActionLink("Valider", "Validate", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-sm btn-outline-success" }) |
                        @Html.ActionLink("Refuser", "Refuse", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-sm btn-outline-danger" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (isHR)
{
    <br />
    <h4>Absences divers à valider</h4>
    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>
                    #
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateDebutConge)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateFinConge)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Heures)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Type)
                </th>
                <th>
                    Solde congé
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in toValidateAbsenceHR)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateDebutConge)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateFinConge)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Heures)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @await AbsenceService.GetSoldeCongeeTotale(HttpContextAccessor.HttpContext.Session, item.User.Id.GetValueOrDefault(0))
                </td>
                <td>
                    @Html.ActionLink("Valider", "Validate", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-sm btn-outline-success" }) |
                    @Html.ActionLink("Refuser", "Refuse", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-sm btn-outline-danger" })
                </td>
            </tr>
            }
        </tbody>
    </table>
}
